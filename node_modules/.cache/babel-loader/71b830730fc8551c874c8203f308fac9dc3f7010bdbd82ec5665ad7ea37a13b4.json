{"ast":null,"code":"var _jsxFileName = \"/Users/jackberry/Documents/The Jump/GIT/Simpsons/src/Components/Content.jsx\";\nimport React from \"react\";\nimport Quote from \"./Quote\";\nimport Image from \"./Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Content(direction, image, quote) {\n  // const { direction, image, quote } = props;\n  console.log(image);\n  if (direction === \"Right\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Quote, {\n        quote: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      image: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Quote, {\n      quote: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","Quote","Image","jsxDEV","_jsxDEV","Content","direction","image","quote","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackberry/Documents/The Jump/GIT/Simpsons/src/Components/Content.jsx"],"sourcesContent":["import React from \"react\";\nimport Quote from \"./Quote\";\nimport Image from \"./Image\";\n\nfunction Content(direction, image, quote) {\n  // const { direction, image, quote } = props;\n  console.log(image);\n  if (direction === \"Right\") {\n    return (\n      <div className=\"content\">\n        <Quote quote={quote} />\n        <Image image={image} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"content\">\n      <Image image={image} />\n      <Quote quote={quote} />\n    </div>\n  );\n}\n\nexport default Content;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,OAAOA,CAACC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACxC;EACAC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClB,IAAID,SAAS,KAAK,OAAO,EAAE;IACzB,oBACEF,OAAA;MAAKO,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBR,OAAA,CAACH,KAAK;QAACO,KAAK,EAAEA;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvBZ,OAAA,CAACF,KAAK;QAACK,KAAK,EAAEA;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEV;EACA,oBACEZ,OAAA;IAAKO,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBR,OAAA,CAACF,KAAK;MAACK,KAAK,EAAEA;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBZ,OAAA,CAACH,KAAK;MAACO,KAAK,EAAEA;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACC,EAAA,GAjBQZ,OAAO;AAmBhB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}